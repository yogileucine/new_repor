{"uid":"a3c67554031c8161","name":"Validate the absent on Protocol Microbial Endotoxin residue verification when select zero in microbial policy for room grade swab samples for non split","fullName":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol#test_microbial_endotoxin_protocol_swab_absent_zero_non_split_room_grade","historyId":"1bc50950895b732325ea9674f6cc464b","time":{"start":1712652122256,"stop":1712652123820,"duration":1564},"description":"This test case tests API to Validate the absent on Protocol Microbial Endotoxin residue verification when select zero in microbial policy for room grade swab samples for non split","descriptionHtml":"<p>This test case tests API to Validate the absent on Protocol Microbial Endotoxin residue verification when select zero in microbial policy for room grade swab samples for non split</p>\n","status":"failed","statusMessage":"AssertionError: {\"error\":{\"errName\":\"DataValidationError\",\"where\":{\"domain\":\"MicrobialCleaningLimitPolicy\",\"action\":\"Modify\"},\"name\":\"Data Validation Issue\",\"errors\":[{\"target\":{\"roomGradeId\":null,\"type\":\"Grade\",\"samplingMethodType\":\"swab\",\"residueType\":\"BioBurden\",\"contactType\":\"Direct\",\"limit\":0,\"perUnitArea\":5,\"perUnitVolume\":null,\"facilityId\":\"6a8450a7-c9a2-4c69-9fcb-425d060f3d1f\"},\"value\":0,\"property\":\"limit\",\"children\":[],\"constraints\":{\"isPositive\":\"limit must be a positive number\"}},{\"property\":\"roomGradeId\",\"constraints\":{\"roomGradeId\":\"room grade id is required\"},\"value\":null}],\"message\":\"\",\"action\":\"Modify\",\"domain\":\"MicrobialCleaningLimitPolicy\"}}","statusTrace":"self = <test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol object at 0x00000152E9157890>\n\n    @allure.title(\"Validate the absent on Protocol Microbial Endotoxin residue verification when select zero in \"\n                  \"microbial policy for room grade swab samples for non split\")\n    @allure.description(\"This test case tests API to Validate the absent on Protocol Microbial Endotoxin residue \"\n                        \"verification when select zero in microbial policy for room grade swab samples for non split\")\n    @allure.link(\"https://app.clickup.com/t/86cuw0jyg\")\n    @pytest.mark.formulation\n    @pytest.mark.microbial_endotoxin_protocol_swab_absent_zero_non_split_room_grade\n    def test_microbial_endotoxin_protocol_swab_absent_zero_non_split_room_grade(self):\n        microbial_data = {}\n        microbial_data.update(self.DEFAULT_SURFACE_AREA_SQCM)\n        unit = self.update_default_unit.test_get_default_unit(microbial_data)[\"response\"]\n        unit = json.loads(unit)[\"default_units\"][\"unit\"]\n    \n        if unit != \"sqcm\":\n            self.update_default_unit.test_update_default_unit(microbial_data)\n            self.change_assessment.test_start_cleaning_assessment(scenario=True)\n            self.change_assessment.test_submit_approve_cleaning_assessment()\n    \n        microbial_data.update(self.DEFAULT_VOLUME_ML)\n        volume_unit = self.update_default_unit.test_get_default_unit(microbial_data)[\"response\"]\n        volume_unit = json.loads(volume_unit)[\"default_units\"][\"unit\"]\n    \n        if volume_unit != \"ml\":\n            self.update_default_unit.test_update_default_unit(microbial_data)\n            self.change_assessment.test_start_cleaning_assessment(scenario=True)\n            self.change_assessment.test_submit_approve_cleaning_assessment()\n    \n        vol_unit = self.policy_microbial.default_units.test_get_default_unit(data={\"default_unit_name\": \"volume\"})[\n            \"response\"]\n        surface_unit = \\\n            self.policy_microbial.default_units.test_get_default_unit(data={\"default_unit_name\": \"surface_area\"})[\n                \"response\"]\n        unit = json.loads(vol_unit)\n        surface_unit = json.loads(surface_unit)\n        policy = self.policy_microbial.test_get_microbial_cleaning_limits_policy()[\"response\"]\n        policy = json.loads(policy)[\"result\"]\n    \n        volume_unit = unit[\"default_units\"][\"unit\"]\n        surface_area_unit = surface_unit[\"default_units\"][\"unit\"]\n    \n        limit_data = {\"default_endo\": 0, \"un_endo_value\": 0, \"room_grade_limit\": 0, \"room_grade_per_unit\": 5,\n                      \"grade\": True, \"grade_id\": self.protocol_common_method.ROOM_GRADE_ID}\n    \n        payload = create_cleaning_limit_policy_microbial(policy, {\"splitBacteriaAndFungi\": False,\n                                                                  \"microbial_type\": \"bioBurden\",\n                                                                  \"default_unit\": volume_unit,\n                                                                  \"surface_area_unit\": surface_area_unit},\n                                                         limit_data=limit_data)\n    \n        endotoxin_data = {}\n        endotoxin_data.update({\"update_policy_payload\": payload})\n>       microbial_policy_update = self.policy_microbial.test_update_microbial_cleaning_limits_policy(endotoxin_data)[\n            \"response\"]\n\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:3067: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\unit\\settings\\cleaning_limit_policies\\test_microbial_limit_policy.py:72: in test_update_microbial_cleaning_limits_policy\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [422]>\n\n    def status_200(response):\n>       assert response.status_code == 200, response.text\nE       AssertionError: {\"error\":{\"errName\":\"DataValidationError\",\"where\":{\"domain\":\"MicrobialCleaningLimitPolicy\",\"action\":\"Modify\"},\"name\":\"Data Validation Issue\",\"errors\":[{\"target\":{\"roomGradeId\":null,\"type\":\"Grade\",\"samplingMethodType\":\"swab\",\"residueType\":\"BioBurden\",\"contactType\":\"Direct\",\"limit\":0,\"perUnitArea\":5,\"perUnitVolume\":null,\"facilityId\":\"6a8450a7-c9a2-4c69-9fcb-425d060f3d1f\"},\"value\":0,\"property\":\"limit\",\"children\":[],\"constraints\":{\"isPositive\":\"limit must be a positive number\"}},{\"property\":\"roomGradeId\",\"constraints\":{\"roomGradeId\":\"room grade id is required\"},\"value\":null}],\"message\":\"\",\"action\":\"Modify\",\"domain\":\"MicrobialCleaningLimitPolicy\"}}\n\nutil\\validate_response.py:3: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1712647327079,"stop":1712647327378,"duration":299},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_facility","time":{"start":1712647327378,"stop":1712647327498,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"microbial_endotoxin_protocol_swab_absent_zero_non_split_room_grade"},{"name":"tag","value":"formulation"},{"name":"tag","value":"microbial_multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.multi_production_protocol.protocol"},{"name":"suite","value":"test_multi_production_protocol_microbial_policy_absent"},{"name":"subSuite","value":"TestMicrobialMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"15348-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cuw0jyg","url":"https://app.clickup.com/t/86cuw0jyg","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["microbial_endotoxin_protocol_swab_absent_zero_non_split_room_grade","scenario","formulation","microbial_multi_production_protocol"]},"source":"a3c67554031c8161.json","parameterValues":[]}