{"uid":"2a608dc05b6ea667","name":"Change the batch size of production","fullName":"tests.unit.quick_actions.test_add_new_production.TestAddNewProduction#test_change_batch_size_production","historyId":"abd86740fabee115002892283b998074","time":{"start":1712653662471,"stop":1712653662569,"duration":98},"description":"This method is used to change the batch size of production","descriptionHtml":"<p>This method is used to change the batch size of production</p>\n","status":"failed","statusMessage":"AssertionError: {\"error\":{\"name\":\"Bad Request\",\"errName\":\"BadRequest\",\"message\":\"Malformed Min batch size given.\"}}","statusTrace":"self = <test_add_new_production.TestAddNewProduction object at 0x000001DB7055CF90>\n\n    @allure.title(\"Change the batch size of production\")\n    @allure.description(\"This method is used to change the batch size of production\")\n    @allure.link(\"https://app.clickup.com/t/85zrme514\")\n    @pytest.mark.change_batch_size_production\n    def test_change_batch_size_production(self):\n        production_id = TestAddNewProduction.PRODUCTION_ID\n        payload = create_change_batch_size_payload(production_id, TestAddNewProduction.DEFAULT_UNIT)\n        if payload is not None:\n            url = const.PRODUCTION + str(production_id) + const.CHANGE_BATCH_SIZE\n            response = Request.post(url, data=payload, use_facility_url=True)\n>           status_200(response)\n\ntests\\unit\\quick_actions\\test_add_new_production.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [400]>\n\n    def status_200(response):\n>       assert response.status_code == 200, response.text\nE       AssertionError: {\"error\":{\"name\":\"Bad Request\",\"errName\":\"BadRequest\",\"message\":\"Malformed Min batch size given.\"}}\n\nutil\\validate_response.py:3: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1712653660926,"stop":1712653661169,"duration":243},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_facility","time":{"start":1712653661169,"stop":1712653661285,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"change_batch_size_production"},{"name":"tag","value":"add_new_production"},{"name":"tag","value":"unit"},{"name":"parentSuite","value":"tests.unit.quick_actions"},{"name":"suite","value":"test_add_new_production"},{"name":"subSuite","value":"TestAddNewProduction"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"10004-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.quick_actions.test_add_new_production"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85zrme514","url":"https://app.clickup.com/t/85zrme514","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e0bbd92fa62e1eee","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1712653657783,"stop":1712653657783,"duration":0}},{"uid":"5c7490552619deb6","status":"failed","statusDetails":"AssertionError: {\"error\":{\"name\":\"Bad Request\",\"errName\":\"BadRequest\",\"message\":\"Malformed Min batch size given.\"}}","time":{"start":1712652556810,"stop":1712652556912,"duration":102}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["unit","add_new_production","change_batch_size_production"]},"source":"2a608dc05b6ea667.json","parameterValues":[]}