{"uid":"3e05976c85e4367b","name":"Add new production","fullName":"tests.unit.quick_actions.test_add_new_production.TestAddNewProduction#test_add_new_production","historyId":"1bd60687886606fc8b0f2d34f1512b0f","time":{"start":1712653661289,"stop":1712653662255,"duration":966},"description":"This method is used to add new production to the production","descriptionHtml":"<p>This method is used to add new production to the production</p>\n","status":"broken","statusMessage":"KeyError: 'result'","statusTrace":"self = <test_add_new_production.TestAddNewProduction object at 0x000001DB7055C8D0>\n\n    @allure.title(\"Add new production\")\n    @allure.description(\"This method is used to add new production to the production\")\n    @allure.link(\"https://app.clickup.com/t/85zrme3f2\")\n    @pytest.mark.add_new_production\n    def test_add_new_production(self):\n        unit = self.get_default_units_for_productions()\n        additional_fields = self.get_additional_fields()\n        analytical_method = self.master_data_analytical.test_add_analytical_method_master_data_details()[\"response\"]\n        am_id = json.loads(analytical_method)[\"result\"]\n        product = self.master_data_product.test_add_product_master_data_details()\n        active_id = product[\"active_id\"]\n        product_id = json.loads(product[\"response\"])[\"result\"]\n        payload = create_production_payload(product_id, additional_fields, active_id, am_id, unit)\n        if payload is not None:\n            url = const.PRODUCTION\n            response = Request.post(url, data=payload, use_facility_url=True)\n>           TestAddNewProduction.PRODUCTION_ID = json.loads(response.text)[\"result\"]\nE           KeyError: 'result'\n\ntests\\unit\\quick_actions\\test_add_new_production.py:84: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"login","time":{"start":1712653660926,"stop":1712653661169,"duration":243},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_facility","time":{"start":1712653661169,"stop":1712653661285,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"add_new_production"},{"name":"tag","value":"unit"},{"name":"parentSuite","value":"tests.unit.quick_actions"},{"name":"suite","value":"test_add_new_production"},{"name":"subSuite","value":"TestAddNewProduction"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"10004-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.quick_actions.test_add_new_production"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85zrme3f2","url":"https://app.clickup.com/t/85zrme3f2","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a89168a0e9da8f45","status":"failed","statusDetails":"AssertionError: 419","time":{"start":1712653657338,"stop":1712653657338,"duration":0}},{"uid":"fc52b2f12549b58f","status":"broken","statusDetails":"KeyError: 'result'","time":{"start":1712652555799,"stop":1712652556789,"duration":990}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["unit","add_new_production"]},"source":"3e05976c85e4367b.json","parameterValues":[]}